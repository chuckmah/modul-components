@import 'abstracts/variables';
$m-input-style--color-default-text: $m-color--disabled !default;
$m-input-style--color-focus: $m-color--interactive !default;
$m-input-style--color-error: $m-color--error !default;
$m-input-style--color-valid: $m-color--success !default;
$m-input-style--color-disabled: $m-color--disabled !default;
$m-input-style--color-waiting: $m-color--active !default;
$m-input-style--padding: 5px !default;

.m-input-style {
    position: relative;
    z-index: 0;
    display: inline-flex;
    flex-direction: column;
    outline: none;
    cursor: pointer;
    min-width: 130px;

    &::before,
    &::after {
        position: absolute;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 2;
        content: '';
        display: block;
    }

    &::before {
        transition: border-color $m-transition-duration ease;
        width: 100%;
        border-bottom: 1px solid $m-color--grey-darker;
    }

    &::after {
        transition: width $m-transition-duration--l ease-in-out;
        width: 0;
        height: 2px;
        background: $m-input-style--color-focus;
    }

    &:hover:not(.m--is-disabled):not(.m--has-error):not(.m--is-valid):not(.m--is-focus),
    &.m--has-value {
        &::before {
            border-color: $m-color--text;
        }

        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            color: $m-color--text;
        }
    }

    &.m--is-focus {
        &::after {
            width: 100%;
        }

        .m-input-style__label,
        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            color: $m-input-style--color-focus;
        }
    }

    &.m--is-label-up {
        cursor: text;

        .m-input-style {
            &__label {
                transform: translate(0, 100%);
                bottom: 100%;
                z-index: 1;
                width: 100%;
                font-size: $m-font-size--s;
                cursor: pointer;
            }
        }
    }

    &.m--has-label {
        padding-top: 16px; // Magic number
    }

    &:not(.m--is-label-up) {
        &.m--has-label .m-input-style__body__left {
            opacity: 0;
        }
    }

    &.m--has-error {
        &::before {
            border-color: $m-input-style--color-error;
        }

        &::after {
            background: $m-input-style--color-error;
        }

        .m-input-style__label,
        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            color: $m-input-style--color-error;
        }
    }

    &.m--is-valid {
        &::before {
            border-color: $m-input-style--color-valid;
        }

        &::after {
            background: $m-input-style--color-valid;
        }

        .m-input-style__label,
        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            color: $m-input-style--color-valid;
        }
    }

    &.m--is-disabled {
        &::before {
            border-bottom-style: dashed;
            border-color: $m-input-style--color-disabled;
        }

        &::after {
            background: $m-input-style--color-disabled;
        }

        .m-input-style__label,
        .m-input-style__body,
        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            color: $m-input-style--color-disabled;
        }

        &,
        .m-input-style__label,
        .m-input-style__body,
        .m-input-style__body__left,
        .m-input-style__body__right,
        .m-input-style__body input,
        .m-input-style__body div,
        .m-input-style__body span,
        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            color: $m-input-style--color-disabled;
            cursor: not-allowed;
            user-select: none;
        }
    }

    &.m--is-waiting {
        &,
        .m-input-style__label,
        .m-input-style__body,
        .m-input-style__body__left,
        .m-input-style__body__right,
        .m-input-style__body input,
        .m-input-style__body div,
        .m-input-style__body span,
        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            cursor: wait;
        }
    }

    &__label {
        transition-property: color, top, bottom, transform, font-size;
        transition-duration: $m-transition-duration--l;
        transition-timing-function: ease;
        position: absolute;
        z-index: 0;
        bottom: $m-input-style--padding;
        width: 100%;
        font-size: $m-font-size--l;
        font-weight: $m-font-weight--bold;
        white-space: nowrap;
    }

    &__body {
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        flex: 1 1 auto;
        width: 100%;
        min-height: 30px; // Magic number
        padding: 0 0 $m-input-style--padding 0;
        font-weight: $m-font-weight;
        text-decoration: none;

        &,
        div,
        span {
            cursor: pointer;
        }

        &,
        input {
            outline: none;
            overflow: hidden;
            text-overflow: ellipsis;
            font-family: $m-font-family;
            font-size: $m-font-size--l;
            font-weight: $m-font-weight;
            text-align: left;
            color: $m-color--text;
            border: none;
            background: none;

            &[type=password] {
                letter-spacing: 2px;
            }
        }

        input {
            cursor: text;
            width: 100%;
        }

        &__left {
            transition: opacity 0.3s ease;
            flex: 1 1 auto;
        }

        &__right {
            display: flex;
        }

        &__transparent-text {
            opacity: 0;
            width: 0;
        }

        .m-button.m--is-mode-icon,
        .m-icon.m-icon {
            position: relative;
            z-index: 0;
            font-size: 16px;
            color: $m-color--grey-darker;
        }

        .m-button.m--is-mode-icon {
            min-width: auto;
            min-height: auto;
        }

        .m-icon.m-icon {
            transition: color 0.3s ease;
        }
    }

    div {
        outline: none;
    }
}
