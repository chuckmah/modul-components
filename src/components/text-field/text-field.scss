@import 'abstracts/variables';
$m-text-field--color-default-text: $m-color--grey-darker !default;
$m-text-field--color-focus: $m-color--interactive !default;
$m-text-field--color-error: $m-color--error !default;
$m-text-field--color-valid: $m-color--success !default;
$m-text-field--color-disabled: $m-color--grey-darker !default;
$m-text-field--margin: $m-margin--s !default;

.m-text-field {
    position: relative;
    display: inline-flex;
    flex-direction: column;
    outline: none;
    min-width: 130px; // !!IMPORTANT!! if this value change please, update TEXTFIELD_MIN_WIDTH constant in dropdown.ts

    &__input {
        &::after {
            content: "";
            display: block;
            position: absolute;
            top: 0;
            bottom: 1px;
            right: 26px;
            width: 12px;
            background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 80%, rgba(255, 255, 255, 1) 100%);
        }
    }

    &.m--is-mode-dropdown {
        .m-text-field__input-container {
            .m-text-field__input {
                padding-right: 26px;
            }

            .m-text-field__icon.m--is-dropdown {
                position: absolute;
                right: 0;
                top: 5px;
            }
        }
    }

    &.m--is-focus {
        &:not(.m--is-disabled) {
            .m-text-field {
                &__label {
                    color: $m-text-field--color-focus;
                }

                &__input-container::after {
                    width: 100%;
                }

                &__icon {
                    &.m-button.m--is-mode-icon {
                        color: $m-color--interactive;
                    }

                    &.m--is-dropdown {
                        transform: rotate(-180deg);
                    }
                }
            }
        }
    }

    &.m--has-label {
        padding-top: 16px; // Magic number
    }

    &.m--not-editable {
        .m-text-field__label,
        .m-text-field__input {
            cursor: pointer;
        }
    }

    &.m--is-disabled {
        &,
        .m-text-field__label,
        .m-text-field__input {
            user-select: none;
            cursor: not-allowed;
        }

        .m-text-field {
            &__label,
            &__icon,
            &__input {
                color: $m-text-field--color-disabled;
            }

            &__input {
                background: none;
                position: relative;

                &-container::before {
                    border-bottom-style: dashed;
                    border-color: $m-text-field--color-disabled;
                }
            }
        }
    }

    &.m--has-error,
    &.m--is-valid {
        .m-text-field__input-container::after {
            width: 100%;
        }
    }

    &.m--has-error {
        &.m--is-focus,
        &:not(.m--no-value) {
            .m-text-field__label {
                color: $m-text-field--color-error;
            }
        }

        &,
        &:hover:not(.m--is-focus),
        &.m--is-focus {
            .m-text-field__icon {
                &.m-button.m--is-mode-icon {
                    color: $m-color--error;
                }
            }
        }

        .m-text-field__input-container::after {
            width: 100%;
            background: $m-text-field--color-error;
        }
    }

    &.m--is-valid {
        &.m--is-focus,
        &:not(.m--no-value) {
            .m-text-field__label {
                color: $m-text-field--color-valid;
            }
        }

        &,
        &:hover:not(.m--is-focus),
        &.m--is-focus {
            .m-text-field__icon {
                &.m-button.m--is-mode-icon {
                    color: $m-color--success;
                }
            }
        }

        .m-text-field__input-container::after {
            background: $m-text-field--color-valid;
        }
    }

    &:not(.m--is-focus) {
        &:hover {
            .m-text-field__icon {
                &.m-button.m--is-mode-icon {
                    color: $m-color--text;
                }
            }
        }

        &.m--no-value:not(.m--is-disabled) {
            &:hover {
                .m-text-field__input-container {
                    &::before {
                        border-color: $m-color--text;
                    }
                }
            }
        }
    }

    &:not(.m--is-focus),
    &.m--is-disabled {
        &.m--no-value {
            .m-text-field {
                &__label {
                    top: 18px; // Magic number
                    font-size: $m-font-size--l;
                }

                &__input-container {
                    &::before {
                        border-color: $m-color--grey-darker;
                    }
                }

                &__icon.m--is-disabled {
                    font-size: 12px;
                }
            }
        }
    }

    &:not(.m--is-focus):not(.m--is-disabled) {
        .m-text-field__label {
            cursor: pointer;
        }
    }

    &__label {
        transition-property: color, top, font-size;
        transition-duration: $m-transition-duration--l;
        transition-timing-function: ease;
        position: absolute;
        top: 0;
        z-index: 1;
        width: 100%;
        font-size: $m-font-size--s;
        font-weight: $m-font-weight--bold;
        white-space: nowrap;
    }

    &__input {
        position: relative;
        z-index: 2;
        outline: none;
        cursor: text;
        padding: 0 0 $m-text-field--margin 0;
        font-family: $m-font-family;
        font-size: $m-font-size--l;
        font-weight: $m-font-weight;
        text-decoration: none;
        text-align: left;
        color: $m-color--text;
        border: none;
        background: none;
        flex: 1 1 auto;
        overflow: hidden;

        &-container {
            position: relative;
            display: flex;
            width: 100%;
            justify-content: space-between;

            &::before,
            &::after {
                position: absolute;
                right: 0;
                bottom: 0;
                left: 0;
                z-index: 2;
                content: '';
                display: block;
            }

            &::before {
                transition: border-color $m-transition-duration ease;
                width: 100%;
                border-bottom: 1px solid $m-color--text;
            }

            &::after {
                transition: width $m-transition-duration--l ease-in-out;
                width: 0;
                height: 2px;
                background: $m-text-field--color-focus;
            }
        }

        &__default-text {
            transition: opacity $m-transition-duration ease;
            opacity: 1;
            color: $m-text-field--color-default-text;

            &.m--is-transparent {
                opacity: 0;
            }
        }

        &__value {
            display: block;
            white-space: nowrap;
        }

        &[type=password] {
            -webkit-text-security: disc;
            user-select: none;
        }

        &.m--is-transparent {
            opacity: 0;
            width: 1px;
            user-select: none;
        }
    }

    &__icon {
        stroke-width: 2px;
        z-index: 1;

        &.m-button {
            min-height: 20px;
            min-width: 26px;
        }

        &.m--is-disabled {
            margin-right: $m-margin--s;
        }

        &.m--is-dropdown {
            &.m-button.m--is-mode-icon {
                transition: transform $m-transition-duration ease, color $m-transition-duration ease;
            }
        }
    }

    .m-spinner {
        min-height: 20px;
        min-width: 26px;
        display: flex;
        align-content: center;
        justify-content: center;
    }
}
